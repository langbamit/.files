# : << EOF

# -- general -------------------------------------------------------------------
# set-option -g default-shell /usr/bin/zsh
set -ga terminal-overrides ",alacritty:Tc"
setw -g xterm-keys on
set -sg repeat-time 600                   # increase repeat timeout

unbind C-b
set -g prefix C-a
bind C-a send-prefix

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Mouse friendly
set -g mouse on



# -- display -------------------------------------------------------------------

setw -g base-index 1     # make pane numbering consistent with windows
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time


# activity
set -g monitor-activity on
set -g visual-activity off

set -g mode-keys vi


# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session
# kill session
bind-key X confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'"
# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind _ split-window -v -c "#{pane_current_path}"
# split current window vertically
bind | split-window -h -c "#{pane_current_path}"

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right

bind -n M-` resize-pane -Z  # toggle zoom

# window navigation


bind -n M-1 if-shell "tmux select-window -t :1" "" "new-window -t :1"
bind -n M-2 if-shell "tmux select-window -t :2" "" "new-window -t :2"
bind -n M-3 if-shell "tmux select-window -t :3" "" "new-window -t :3"
bind -n M-4 if-shell "tmux select-window -t :4" "" "new-window -t :4"
bind -n M-5 if-shell "tmux select-window -t :5" "" "new-window -t :5"

bind 1 run-shell "tmux swap-window -d -s $(tmux list-windows | grep  active | cut -d':' -f1) -t 1"
bind 2 run-shell "tmux swap-window -d -s $(tmux list-windows | grep  active | cut -d':' -f1) -t 2"
bind 3 run-shell "tmux swap-window -d -s $(tmux list-windows | grep  active | cut -d':' -f1) -t 3"
bind 4 run-shell "tmux swap-window -d -s $(tmux list-windows | grep  active | cut -d':' -f1) -t 4"
bind 5 run-shell "tmux swap-window -d -s $(tmux list-windows | grep  active | cut -d':' -f1) -t 5"

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from


# -- user defined overrides ----------------------------------------------------

# Avoid date/time taking up space
# set -g status-right ''
# set -g status-right-length 0


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'jabirali/tmux-tilish'

# set -g @plugin 'christoomey/vim-tmux-navigator'

# Theme
set -g @plugin 'dracula/tmux'

# Plugin options.
# set -g @tilish-navigator 'on'
# set -g @tilish-default 'main-vertical'
set -g @dracula-show-battery false
set -g @dracula-show-network false
set -g @dracula-show-time false
set -g @dracula-show-fahrenheit false
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session

# use tilish keybinding for navigation instead of sensible
# unbind C-n
# unbind C-p
# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'

# Install `tpm` if needed.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'
unbind -n M-n
# EOF
# # The code below get from jabirali/tmux-tilish with minimal features {{{

#    bind='bind -n'
#    mod='M-'

#    legacy="$(tmux -V | grep -E 'tmux (1\.|2\.[0-6])')"
#    # Default to US keyboard layout, unless something is configured.
#    if [ -z "$shiftnum" ]
#    then
#       shiftnum='!@#$%^&*()'
#    fi
#    # Define core functionality {{{
#    bind_switch () {
#       # Bind keys to switch between workspaces.
#       tmux $bind "$1" \
#          if-shell "tmux select-window -t :$2" "" "new-window -t :$2"
#    }

#    bind_move () {
#       # Bind keys to move panes between workspaces.
#       if [ -z "$legacy" ]
#       then
#          tmux $bind "$1" \
#             if-shell "tmux join-pane -t :$2" \
#                "" \
#                "new-window -dt :$2; join-pane -t :$2; select-pane -t top-left; kill-pane" \\\;\
#             select-layout \\\;\
#             select-layout -E
#       else
#          tmux $bind "$1" \
#             if-shell "tmux new-window -dt :$2" \
#                "join-pane -t :$2; select-pane -t top-left; kill-pane" \
#                "send escape; join-pane -t :$2" \\\;\
#             select-layout
#       fi
#    }
#    char_at () {
#       # Finding the character at a given position in
#       # a string in a way compatible with POSIX sh.
#       echo $1 | cut -c $2
#    }
#    # }}}
#    # Switch to workspace via Alt + #.
#    # bind_switch "${mod}1" 1
#    # bind_switch "${mod}2" 2
#    # bind_switch "${mod}3" 3
#    # bind_switch "${mod}4" 4

#    # bind_move "${mod}$(char_at $shiftnum 1)" 1
#    # bind_move "${mod}$(char_at $shiftnum 2)" 2
#    # bind_move "${mod}$(char_at $shiftnum 3)" 3
#    # bind_move "${mod}$(char_at $shiftnum 4)" 4


# # }}}
